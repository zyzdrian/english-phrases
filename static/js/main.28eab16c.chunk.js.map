{"version":3,"sources":["components/BottomMenu/BottomMenu.tsx","components/Button/Button.tsx","components/FadeAnimation/FadeAnimation.tsx","components/FlipCard/FlipCard.tsx","components/IconButton/IconButton.tsx","components/Phrase/Phrase.tsx","components/Portal/Portal.tsx","components/TopBar/TopBar.tsx","utils/portal.ts","consts/buckets.ts","consts/date.ts","contexts/phrasesContext.ts","hooks/usePhrases.ts","hooks/useDailyPhrases.ts","pages/FlashcardsPage/FlashcardsPage.tsx","pages/FreeLearningPage/FreeLearningPage.tsx","styledComponents.tsx","App.tsx","serviceWorker.ts","index.tsx","components/IconButton/left-arrow.svg","components/TopBar/menu.svg"],"names":["BOTTOM_MENU_TEST_IDS","StyledBottomMenu","styled","div","BottomMenu","markAsKnown","markAsNotKnown","rollbackState","enableButtons","areButtonsDisabled","isRollbackDisabled","data-testid","bottomMenu","variant","onClick","disabled","undoButton","showMeaningButton","iDontKnowButton","iKnowButton","StyledButton","button","props","theme","shadow","Button","children","rest","FLIP_CART_TEST_IDS","Container","FadeAnimation","isOpen","CSSTransition","timeout","in","classNames","unmountOnExit","StyledFlip","StyledFlipper","StyledFront","isFlipped","StyledBack","FlipCard","front","back","isOutsidedFlipped","onShow","useState","setFlipped","useEffect","undefined","PHRASE_TEST_IDS","StyledIconButton","IconButton","src","leftArrow","alt","StyledPhrase","cardBackground","fontColorDark","StyledName","StyledMeaning","isMultiple","Phrase","phrase","meanings","length","name","map","meaning","index","key","TOP_BAR_TEST_IDS","Portal","id","document","createElement","el","existingParent","getElementById","parentElem","rootContainer","setAttribute","createRootElement","rootElem","lastElementChild","body","insertBefore","nextElementSibling","addRootElement","appendChild","remove","childNodes","ReactDOM","createPortal","BUCKET","StyledProgressBar","primary","StyledHamburger","img","StyledText","SIDE_BAR_POSITION","StyledSideBar","fontColorLight","secondary","StyledBackdrop","TopBar","title","setIsOpen","hamburger","prevState","style","width","sideBar","to","backdrop","BUCKET_INDEX_PER_DAY","EVERYDAY","EVERY_SECOND_DAY","EVERY_FOURTH_DAY","EVERY_EIGHTH_DAY","EVERY_SIXTEENTH_DAY","MS_IN_DAY","MS_IN_SEC","ISO_DATE_START_INDEX","ISO_DATE_END_INDEX","PhrasesContext","React","createContext","phrases","setPhrases","usePhrases","useContext","fetchPhrases","a","fetch","phrasesResult","json","phrasesJson","appropriatesResult","appropriatesJson","mappedPhrases","phraseBody","appropriate","find","appropriateBody","appropriateId","phraseMetadata","JSON","parse","localStorage","getItem","bucketIndex","FIRST_DAY","FIRST_INDEX","INITIAL_CURRENT_PHRASE_INDEX","INITIAL_PHRASE","chapterId","useDailyPhrases","dailyPhrases","setDailyPhrases","currentPhraseIndex","setCurrentPhraseIndex","isCurrentPhraseFlipped","setIsCurrentPhraseFlipped","canMark","setCanMark","tmpPhrase","setTmpPhrase","nextPhrase","today","Date","toISOString","slice","dayStr","cycleDate","whichDay","getTime","setItem","filteredPhrases","filter","some","someBucketIndex","sort","b","currentPhrase","actions","enableMarking","stringify","canUndo","undo","FREE_LEARNING_PAGE_TEST_IDS","StyledFlashcardsPage","section","FlashcardsPage","SwitchTransition","StyledFreeLearningPage","StyledContainer","FreeLearningPage","phrasesContainer","GlobalStyle","createGlobalStyle","lightTheme","backgroundColorStart","backgroundColorStop","baseStyled","StyledApp","App","Provider","value","display","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","render","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.28eab16c.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button, IconButton } from '..';\r\n\r\nexport enum BOTTOM_MENU_TEST_IDS {\r\n    bottomMenu = 'bottom-menu',\r\n    undoButton = 'undo-button',\r\n    showMeaningButton = 'show-meaning-button',\r\n    iKnowButton = 'i-know-button',\r\n    iDontKnowButton = 'i-dont-know-button'\r\n}\r\n\r\nconst StyledBottomMenu = styled.div`\r\ndisplay: flex;\r\npadding: 24px;\r\nmax-width: 600px;\r\nwidth: 100%;\r\n\r\n& button {\r\n  margin-right: 8px;\r\n  \r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n}\r\n`;\r\n\r\nexport const BottomMenu = ({ markAsKnown, markAsNotKnown, rollbackState, enableButtons, areButtonsDisabled, isRollbackDisabled }: IBottomMenuProps) => (\r\n    <StyledBottomMenu data-testid={BOTTOM_MENU_TEST_IDS.bottomMenu}>\r\n        {areButtonsDisabled ? (\r\n            <>\r\n                <IconButton variant='secondary' onClick={rollbackState} disabled={isRollbackDisabled} data-testid={BOTTOM_MENU_TEST_IDS.undoButton} />\r\n                <Button onClick={enableButtons} data-testid={BOTTOM_MENU_TEST_IDS.showMeaningButton}>SHOW MEANING</Button>\r\n            </>\r\n        ): (\r\n            <>\r\n                <Button variant='secondary' onClick={markAsNotKnown} disabled={areButtonsDisabled} data-testid={BOTTOM_MENU_TEST_IDS.iDontKnowButton}>\r\n                    {'I don\\'t know'}\r\n                </Button>\r\n                <Button onClick={markAsKnown} disabled={areButtonsDisabled} data-testid={BOTTOM_MENU_TEST_IDS.iKnowButton}>I know</Button>\r\n            </>\r\n        )}\r\n    </StyledBottomMenu>\r\n);\r\n\r\nexport interface IBottomMenuProps {\r\n    markAsKnown: () => void;\r\n    markAsNotKnown: () => void;\r\n    rollbackState: () => void;\r\n    enableButtons: () => void;\r\n    isRollbackDisabled: boolean;\r\n    areButtonsDisabled: boolean;\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface IStyledButton {\r\n    variant: 'primary' | 'secondary';\r\n}\r\n\r\nconst StyledButton = styled.button<IStyledButton>`\r\nflex-grow: 1;\r\nflex-basis: 0;\r\nbackground-color: ${props => props.theme[props.variant]};\r\nbox-shadow: ${props => props.theme.shadow};\r\nborder: none;\r\ncolor: white;\r\nborder-radius: 16px;\r\ncursor: pointer;\r\nheight: 56px;\r\nfont-weight: bold;\r\nline-height: 1.36;\r\nletter-spacing: 0.28px;\r\n\r\n&:disabled {\r\n  background-color: gray;\r\n  color: white;\r\n  cursor: default;\r\n}\r\n\r\n&:focus {\r\n  outline: none;\r\n}\r\n`;\r\n\r\nexport const Button: React.FC<IButton> = ({ children, variant = 'primary', ...rest }) => (\r\n    <StyledButton variant={variant} {...rest}>{children}</StyledButton>\r\n);\r\n\r\nexport interface IButton {\r\n    variant?: 'primary' | 'secondary';\r\n    onClick?: () => void;\r\n    disabled?: boolean;\r\n}\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\n\r\nconst transitionName = 'fade';\r\n\r\nconst Container = styled.div`\r\n&.${transitionName}-appear {\r\n  opacity: 0;\r\n}\r\n\r\n&.${transitionName}-appear-active {\r\n  opacity: 1;\r\n  transition: opacity 300ms ease-in;\r\n}\r\n&.${transitionName}-enter {\r\n  opacity: 0;\r\n}\r\n\r\n&.${transitionName}-enter-active {\r\n  opacity: 1;\r\n  transition: opacity 300ms ease-in;\r\n}\r\n&.${transitionName}-exit {\r\n  opacity: 1;\r\n}\r\n\r\n&.${transitionName}-exit-active {\r\n  opacity: 0;\r\n  transition: opacity 300ms ease-out;\r\n}\r\n`;\r\n\r\nexport const FadeAnimation: React.FC<IFadeAnimation> = ({ children, isOpen }) => (\r\n    <CSSTransition timeout={300} in={isOpen} classNames={transitionName} unmountOnExit>\r\n        <Container>\r\n            {children}\r\n        </Container>\r\n    </CSSTransition>\r\n);\r\n\r\ninterface IFadeAnimation {\r\n    isOpen?: boolean;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport enum FLIP_CART_TEST_IDS {\r\n    front = 'front',\r\n    back = 'back'\r\n}\r\n\r\nconst StyledFlip = styled.div`\r\nperspective: 1000px;\r\nz-index: auto;\r\n`;\r\n\r\nconst StyledFlipper = styled.div`\r\nposition: relative;\r\nwidth: 100%;\r\nheight: 100%;\r\n`;\r\n\r\nconst FRONT_ANIMATION_START_ANGLE = 180;\r\nconst FRONT_ANIMATION_STOP_ANGLE = 0;\r\n\r\nconst StyledFront = styled.div<ISide>`\r\nbackface-visibility: hidden;\r\nleft: 0;\r\nposition: ${props => props.isFlipped ? 'absolute' : 'relative'};\r\ntop: 0;\r\ntransform: rotateY(${props => props.isFlipped ? FRONT_ANIMATION_START_ANGLE : FRONT_ANIMATION_STOP_ANGLE}deg);\r\ntransform-style: preserve-3d;\r\nwidth: 100%;\r\nheight: 100%;\r\nz-index: 2;\r\ntransition: all 0.6s ease 0s;\r\ncursor: pointer;\r\n`;\r\n\r\nconst BACK_ANIMATION_START_ANGLE = 0;\r\nconst BACK_ANIMATION_STOP_ANGLE = -180;\r\n\r\nconst StyledBack = styled.div<ISide>`\r\nbackface-visibility: hidden;\r\nleft: 0;\r\nposition: ${props => props.isFlipped ? 'relative' : 'absolute'};\r\ntransform: rotateY(${props => props.isFlipped ? BACK_ANIMATION_START_ANGLE : BACK_ANIMATION_STOP_ANGLE}deg);\r\ntransform-style: preserve-3d;\r\ntop: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\ntransition: all 0.6s ease 0s;\r\ncursor: pointer;\r\n`;\r\n\r\nexport const FlipCard: React.FC<IFlipCard> = ({ front, back, isOutsidedFlipped, onShow }) => {\r\n    const [isFlipped, setFlipped] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isOutsidedFlipped !== undefined) {\r\n            setFlipped(isOutsidedFlipped);\r\n        }\r\n    }, [isOutsidedFlipped]);\r\n\r\n    return (\r\n        <StyledFlip>\r\n            <StyledFlipper>\r\n                <StyledFront\r\n                    onClick={() => {\r\n                        setFlipped(true);\r\n                        onShow && onShow();\r\n                    }}\r\n                    isFlipped={isFlipped}\r\n                    data-testid={FLIP_CART_TEST_IDS.front}\r\n                >\r\n                    {front}\r\n                </StyledFront>\r\n                <StyledBack\r\n                    onClick={() => setFlipped(false)}\r\n                    isFlipped={isFlipped}\r\n                    data-testid={FLIP_CART_TEST_IDS.back}\r\n                >\r\n                    {back}\r\n                </StyledBack>\r\n            </StyledFlipper>\r\n        </StyledFlip>\r\n    );\r\n};\r\n\r\nexport interface IFlipCard {\r\n    front: React.ReactNode;\r\n    back: React.ReactNode;\r\n    isOutsidedFlipped?: boolean;\r\n    onShow?: () => void;\r\n}\r\n\r\ninterface ISide {\r\n    isFlipped: boolean;\r\n}\r\n","import React from 'react';\r\nimport { Button, IButton } from '..';\r\nimport leftArrow from './left-arrow.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledIconButton = styled(Button)`\r\nmax-width: 56px;\r\ndisplay: flex;\r\njustify-content: center;\r\n`;\r\n\r\nexport const IconButton: React.FC<IButton> = (props) => (\r\n    <StyledIconButton {...props}>\r\n        <img src={leftArrow} alt='<-' />\r\n    </StyledIconButton>\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FlipCard } from '..';\r\nimport { IPhrase } from '../../models';\r\n\r\nexport enum PHRASE_TEST_IDS {\r\n    name = 'name',\r\n    meaning = 'meaning'\r\n}\r\n\r\nconst StyledPhrase = styled.div`\r\nbackground-color: ${props => props.theme.cardBackground};\r\ncolor: ${props => props.theme.fontColorDark};\r\ntransition: background-color ease 0.3s;\r\npadding: 36px;\r\nheight: 240px;\r\nmax-height: calc(100vh - 184px); // 56px + 2x 24px (bottom menu) + 56px + 24px (top menu)\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nborder-radius: 16px;\r\n`;\r\n\r\nconst StyledFront = styled(StyledPhrase)`\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledName = styled.div`\r\nfont-size: 16px;\r\nfont-weight: bold;\r\ntext-align: center;\r\n`;\r\n\r\nconst StyledBack = styled(StyledPhrase)`\r\n  align-items: flex-start;\r\n`;\r\n\r\ninterface IStyledMeaning {\r\n    isMultiple: boolean;\r\n}\r\n\r\nconst StyledMeaning = styled.div<IStyledMeaning>`\r\ndisplay: ${props => props.isMultiple ? 'list-item' : 'block'};\r\npadding-bottom: 10px;\r\n&:last-child {\r\n  padding-bottom: 0;\r\n}\r\n`;\r\n\r\nexport const Phrase: React.FC<IPhraseProps> = ({ phrase, isFlipped, onShow }) => {\r\n    const isMultiple = phrase.meanings.length > 1;\r\n    return (\r\n            <FlipCard\r\n                front={(\r\n                    <StyledFront>\r\n                        <StyledName data-testid={PHRASE_TEST_IDS.name}>{phrase.name}</StyledName>\r\n                    </StyledFront>\r\n                )}\r\n                back={(\r\n                    <StyledBack>\r\n                        {phrase.meanings.map((meaning, index) => (\r\n                            <StyledMeaning key={meaning} isMultiple={isMultiple} data-testid={`${PHRASE_TEST_IDS.meaning}-${index}`}>\r\n                                {meaning}\r\n                            </StyledMeaning>\r\n                        ))}\r\n                    </StyledBack>\r\n                )}\r\n                isOutsidedFlipped={isFlipped}\r\n                onShow={onShow}\r\n            />);\r\n};\r\n\r\nexport interface IPhraseProps {\r\n    phrase: IPhrase;\r\n    isFlipped?: boolean;\r\n    onShow?: () => void;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { addRootElement, createRootElement } from '../../utils';\r\n\r\nexport const Portal: React.FC<IPortal> = ({ id, children }) => {\r\n    const [el] = useState(document.createElement('div'));\r\n    useEffect(() => {\r\n        const existingParent = document.getElementById(id);\r\n        const parentElem: HTMLElement = existingParent || createRootElement(id);\r\n        parentElem.setAttribute('data-testid', `portal-${id}`);\r\n\r\n        if (!existingParent) {\r\n            addRootElement(parentElem);\r\n        }\r\n\r\n        parentElem.appendChild(el);\r\n        return () => {\r\n            el.remove();\r\n            if (!parentElem.childNodes.length) {\r\n                parentElem.remove();\r\n            }\r\n        };\r\n    }, []);\r\n    return ReactDOM.createPortal(children, el);\r\n};\r\n\r\nexport interface IPortal {\r\n    id: string;\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport hamburger from './menu.svg';\r\nimport { FadeAnimation, Portal } from '..';\r\n\r\nexport enum TOP_BAR_TEST_IDS {\r\n    title = 'title',\r\n    sideBar = 'side-bar',\r\n    hamburger = 'hamburger',\r\n    backdrop = 'backdrop'\r\n}\r\n\r\nconst StyledProgressBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: sticky;\r\n  width: 100%;\r\n  top: 0;\r\n  padding: 0 24px;\r\n  margin-bottom: 24px;\r\n  height: 56px;\r\n  background-color: ${props => props.theme.primary};\r\n  transition: background-color ease 0.3s;\r\n`;\r\n\r\nconst StyledHamburger = styled.img`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledText = styled.div`\r\nfont-size: 1.2rem;\r\n`;\r\n\r\ninterface IStyledSideBar {\r\n    isOpen: boolean;\r\n}\r\n\r\nconst SIDE_BAR_POSITION = {\r\n    open: 0,\r\n    close: -200\r\n};\r\n\r\nconst StyledSideBar = styled.div<IStyledSideBar>`\r\nposition: absolute;\r\nwidth: 200px;\r\nleft: ${props => props.isOpen ? SIDE_BAR_POSITION.open : SIDE_BAR_POSITION.close}px;\r\ntop: 56px;\r\nheight: calc(100vh - 56px);\r\nbackground-color: ${props => props.theme.primary};\r\ndisplay: flex;\r\nflex-direction: column;\r\ntransition: left 0.3s ease-in-out;\r\nz-index: 1;\r\n\r\n& a {\r\n  background-color: ${props => props.theme.primary};\r\n  text-decoration: none;\r\n  color: ${props => props.theme.fontColorLight};\r\n  padding: 16px;\r\n  transition: background-color 0.3s ease;\r\n  \r\n  &:first-child {\r\n  margin-top: 16px;\r\n  }\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.theme.secondary};\r\n  }\r\n}\r\n`;\r\n\r\nconst StyledBackdrop = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  height: calc(100vh - 56px);\r\n  width: 100vw;\r\n  position: absolute;\r\n  top: 56px;\r\n  left: 0;\r\n`;\r\n\r\nexport const TopBar = ({ title }: IProgressBarProps) => {\r\n    const [isOpen, setIsOpen] = useState<boolean>(false);\r\n    return (\r\n        <StyledProgressBar>\r\n            <StyledHamburger\r\n                src={hamburger}\r\n                alt='menu'\r\n                onClick={() => setIsOpen(prevState => !prevState)}\r\n                data-testid={TOP_BAR_TEST_IDS.hamburger}\r\n            />\r\n            <StyledText data-testid={TOP_BAR_TEST_IDS.title}>{title}</StyledText>\r\n            <span style={{ width: '24px' }}/>\r\n            <Portal id='side-bar'>\r\n                <StyledSideBar isOpen={isOpen} data-testid={TOP_BAR_TEST_IDS.sideBar}>\r\n                    <Link to='/'>Flashcards</Link>\r\n                    <Link to='/free-learning'>Free learning</Link>\r\n                </StyledSideBar>\r\n                <FadeAnimation isOpen={isOpen}>\r\n                    <StyledBackdrop onClick={() => setIsOpen(false)} data-testid={TOP_BAR_TEST_IDS.backdrop} />\r\n                </FadeAnimation>\r\n            </Portal>\r\n        </StyledProgressBar>\r\n    );\r\n};\r\n\r\nexport interface IProgressBarProps {\r\n    title?: string;\r\n}\r\n","export function createRootElement(id: string): HTMLElement {\r\n    const rootContainer = document.createElement('div');\r\n    rootContainer.setAttribute('id', id);\r\n    return rootContainer;\r\n}\r\n\r\nexport function addRootElement(rootElem: HTMLElement) {\r\n    const lastElementChild = document.body.lastElementChild;\r\n    document.body.insertBefore(\r\n        rootElem,\r\n        lastElementChild && lastElementChild.nextElementSibling,\r\n    );\r\n}\r\n","export enum BUCKET {\r\n    EVERYDAY,\r\n    EVERY_SECOND_DAY,\r\n    EVERY_FOURTH_DAY,\r\n    EVERY_EIGHTH_DAY,\r\n    EVERY_SIXTEENTH_DAY\r\n}\r\n\r\nexport const BUCKET_INDEX_PER_DAY = [\r\n    [BUCKET.EVERYDAY],\r\n    [BUCKET.EVERYDAY, BUCKET.EVERY_SECOND_DAY],\r\n    [BUCKET.EVERYDAY],\r\n    [BUCKET.EVERYDAY, BUCKET.EVERY_SECOND_DAY, BUCKET.EVERY_FOURTH_DAY],\r\n    [BUCKET.EVERYDAY],\r\n    [BUCKET.EVERYDAY, BUCKET.EVERY_SECOND_DAY],\r\n    [BUCKET.EVERYDAY],\r\n    [BUCKET.EVERYDAY, BUCKET.EVERY_SECOND_DAY, BUCKET.EVERY_FOURTH_DAY, BUCKET.EVERY_EIGHTH_DAY],\r\n    [BUCKET.EVERYDAY],\r\n    [BUCKET.EVERYDAY, BUCKET.EVERY_SECOND_DAY],\r\n    [BUCKET.EVERYDAY],\r\n    [BUCKET.EVERYDAY, BUCKET.EVERY_SECOND_DAY, BUCKET.EVERY_FOURTH_DAY],\r\n    [BUCKET.EVERYDAY],\r\n    [BUCKET.EVERYDAY, BUCKET.EVERY_SECOND_DAY],\r\n    [BUCKET.EVERYDAY],\r\n    [BUCKET.EVERYDAY, BUCKET.EVERY_SECOND_DAY, BUCKET.EVERY_FOURTH_DAY, BUCKET.EVERY_EIGHTH_DAY, BUCKET.EVERY_SIXTEENTH_DAY]\r\n];\r\n","export const MS_IN_SEC = 1000;\r\nexport const SEC_IN_MIN = 60;\r\nexport const MIN_IN_HOUR = 60;\r\nexport const HOURS_IN_DAY = 24;\r\n\r\nexport const MS_IN_DAY = MS_IN_SEC * SEC_IN_MIN * MIN_IN_HOUR * HOURS_IN_DAY;\r\n\r\nexport const ISO_DATE_START_INDEX = 0;\r\nexport const ISO_DATE_END_INDEX = 10;","import React from 'react';\r\nimport { IPhrase } from '../models';\r\n\r\ninterface IPhraseContext {\r\n    phrases: IPhrase[];\r\n    setPhrases: (phrases: IPhrase[]) => void;\r\n}\r\n\r\nexport const PhrasesContext = React.createContext<IPhraseContext>({\r\n    phrases: [],\r\n    setPhrases: () => {}\r\n});\r\n","import { useContext, useEffect } from 'react';\r\nimport { PhrasesContext } from '../contexts';\r\nimport { IAppropriateBody, IPhrase, IPhraseBody, IPhraseMetadata } from '../models';\r\n\r\ninterface IUsePhrases {\r\n    phrases: IPhrase[];\r\n    setPhrases: (phrases: IPhrase[]) => void;\r\n}\r\n\r\nexport function usePhrases(): IUsePhrases {\r\n    const { phrases, setPhrases } = useContext(PhrasesContext);\r\n    const fetchPhrases = async () => {\r\n        const phrasesResult = await fetch('api/phrases.json');\r\n        const phrasesJson: IPhraseBody[] = await phrasesResult.json();\r\n        const appropriatesResult = await fetch('api/appropriates.json');\r\n        const appropriatesJson: IAppropriateBody[] = await appropriatesResult.json();\r\n\r\n        const mappedPhrases = phrasesJson.map((phraseBody) => {\r\n            const appropriate = appropriatesJson.find((appropriateBody) => appropriateBody.id === phraseBody.appropriateId);\r\n            const phraseMetadata: IPhraseMetadata = JSON.parse(localStorage.getItem(phraseBody.id) || '{\"bucketIndex\":0}');\r\n            return {\r\n                ...phraseBody,\r\n                appropriateId: undefined,\r\n                appropriate: appropriate ? appropriate.name : '',\r\n                bucketIndex: phraseMetadata.bucketIndex\r\n            } as IPhrase;\r\n        });\r\n        setPhrases(mappedPhrases);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!phrases.length) {\r\n            fetchPhrases();\r\n        }\r\n    }, []);\r\n    return { phrases, setPhrases };\r\n}\r\n\r\nexport default usePhrases;\r\n","import { useEffect, useState } from 'react';\r\nimport { IPhrase, IPhraseMetadata } from '../models';\r\nimport { BUCKET, BUCKET_INDEX_PER_DAY, ISO_DATE_END_INDEX, ISO_DATE_START_INDEX, MS_IN_DAY } from '../consts';\r\nimport usePhrases from './usePhrases';\r\n\r\nconst FIRST_DAY = 0;\r\nconst FIRST_INDEX = 0;\r\nconst INITIAL_CURRENT_PHRASE_INDEX = 0;\r\nconst INITIAL_PHRASE: IPhrase = { bucketIndex: 1, appropriate: '', chapterId: 0, id: '0', meanings: [], name: '' };\r\n\r\ninterface IActions {\r\n    canMark: boolean;\r\n    enableMarking: () => void;\r\n    markAsKnown: () => void;\r\n    markAsNotKnown: () => void;\r\n    canUndo: boolean;\r\n    undo: () => void;\r\n}\r\n\r\ninterface IUseDailyPhrases {\r\n    dailyPhrases: IPhrase[];\r\n    setDailyPhrases: (phrases: IPhrase[]) => void;\r\n    currentPhrase: IPhrase;\r\n    currentPhraseIndex: number;\r\n    isCurrentPhraseFlipped: boolean;\r\n    actions: IActions;\r\n}\r\n\r\nexport function useDailyPhrases(): IUseDailyPhrases {\r\n    const { phrases } = usePhrases();\r\n    const [ dailyPhrases, setDailyPhrases ] = useState<IPhrase[]>([]);\r\n    const [currentPhraseIndex, setCurrentPhraseIndex] = useState<number>(INITIAL_CURRENT_PHRASE_INDEX);\r\n    const [isCurrentPhraseFlipped, setIsCurrentPhraseFlipped] = useState<boolean>(false);\r\n    const [canMark, setCanMark] = useState<boolean>(true);\r\n    const [tmpPhrase, setTmpPhrase] = useState<IPhrase>(INITIAL_PHRASE);\r\n\r\n    function previousPhrase() {\r\n        setCurrentPhraseIndex(currentPhraseIndex - 1);\r\n        setIsCurrentPhraseFlipped(false);\r\n        setCanMark(true);\r\n    }\r\n\r\n    function nextPhrase() {\r\n        if (currentPhraseIndex < (dailyPhrases.length - 1)) {\r\n            setCurrentPhraseIndex(currentPhraseIndex + 1);\r\n        } else {\r\n            setCurrentPhraseIndex(INITIAL_CURRENT_PHRASE_INDEX);\r\n        }\r\n        setIsCurrentPhraseFlipped(false);\r\n        setCanMark(true);\r\n    }\r\n\r\n    function markAsKnown() {\r\n        setTmpPhrase(dailyPhrases[currentPhraseIndex]);\r\n        const bucketIndex = dailyPhrases[currentPhraseIndex].bucketIndex;\r\n        const phrase: IPhrase = { ...dailyPhrases[currentPhraseIndex], bucketIndex: bucketIndex < BUCKET.EVERY_SIXTEENTH_DAY ? bucketIndex + 1 : bucketIndex };\r\n        localStorage.setItem(phrase.id, JSON.stringify({ bucketIndex: phrase.bucketIndex } as IPhraseMetadata));\r\n        setDailyPhrases([\r\n            ...dailyPhrases.slice(FIRST_INDEX, currentPhraseIndex),\r\n            phrase,\r\n            ...dailyPhrases.slice(currentPhraseIndex + 1)\r\n        ]);\r\n        nextPhrase();\r\n    }\r\n\r\n    function markAsNotKnown() {\r\n        setTmpPhrase(dailyPhrases[currentPhraseIndex]);\r\n        const phrase: IPhrase = { ...dailyPhrases[currentPhraseIndex], bucketIndex: 1 };\r\n        localStorage.setItem(phrase.id, JSON.stringify({ bucketIndex: phrase.bucketIndex } as IPhraseMetadata));\r\n        setDailyPhrases([\r\n            ...dailyPhrases.slice(FIRST_INDEX, currentPhraseIndex),\r\n            phrase,\r\n            ...dailyPhrases.slice(currentPhraseIndex + 1)\r\n        ]);\r\n        nextPhrase();\r\n    }\r\n\r\n    function undo() {\r\n        localStorage.setItem(tmpPhrase.id, JSON.stringify({ bucketIndex: tmpPhrase.bucketIndex } as IPhraseMetadata));\r\n        setDailyPhrases([\r\n            ...dailyPhrases.slice(FIRST_INDEX, currentPhraseIndex -1),\r\n            tmpPhrase as IPhrase,\r\n            ...dailyPhrases.slice(currentPhraseIndex)\r\n        ]);\r\n        setTmpPhrase(INITIAL_PHRASE);\r\n        previousPhrase();\r\n    }\r\n\r\n    function enableMarking() {\r\n        setIsCurrentPhraseFlipped(true);\r\n        setCanMark(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const today = new Date().toISOString().slice(ISO_DATE_START_INDEX, ISO_DATE_END_INDEX);\r\n        const dayStr: string = localStorage.getItem('cycleStartDay') || today;\r\n        const cycleDate = new Date(dayStr);\r\n        let whichDay = (new Date(today).getTime() - cycleDate.getTime()) / (MS_IN_DAY);\r\n        if (whichDay > BUCKET_INDEX_PER_DAY.length || whichDay === FIRST_DAY) {\r\n            localStorage.setItem('cycleStartDay', today);\r\n            whichDay = whichDay % BUCKET_INDEX_PER_DAY.length;\r\n        }\r\n        const filteredPhrases = phrases\r\n            .filter((phrase: IPhrase) => BUCKET_INDEX_PER_DAY[whichDay].some(someBucketIndex => someBucketIndex === phrase.bucketIndex))\r\n            .sort((a: IPhrase, b: IPhrase) => b.bucketIndex - a.bucketIndex);\r\n        setDailyPhrases(filteredPhrases);\r\n    }, [phrases.length]);\r\n    return {\r\n        dailyPhrases,\r\n        setDailyPhrases,\r\n        currentPhrase: dailyPhrases[currentPhraseIndex],\r\n        currentPhraseIndex,\r\n        isCurrentPhraseFlipped,\r\n        actions: {\r\n            canMark,\r\n            enableMarking,\r\n            markAsKnown,\r\n            markAsNotKnown,\r\n            canUndo: tmpPhrase !== undefined,\r\n            undo\r\n        }\r\n    };\r\n}\r\n\r\nexport default useDailyPhrases;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport { BottomMenu, Phrase, TopBar } from '../../components';\r\nimport useDailyPhrases from '../../hooks/useDailyPhrases';\r\n\r\nconst StyledFlashcardsPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst transitionName = 'slide';\r\n\r\nconst Container = styled.section`\r\nposition: relative;\r\npadding: 0 24px;\r\nmax-width: 600px;\r\nwidth: 100%;\r\n\r\n&.${transitionName}-appear {\r\n  left: -100%;\r\n}\r\n\r\n&.${transitionName}-appear-active {\r\n  left: 0;\r\n  transition: left 300ms ease-in;\r\n}\r\n&.${transitionName}-enter {\r\n  left: -100%;\r\n}\r\n\r\n&.${transitionName}-enter-active {\r\n  left: 0;\r\n  transition: left 300ms ease-in;\r\n}\r\n&.${transitionName}-exit {\r\n  left: 0;\r\n}\r\n\r\n&.${transitionName}-exit-active {\r\n  left: 100%;\r\n  transition: left 300ms ease-out;\r\n}\r\n`;\r\n\r\nexport const FlashcardsPage: React.FC = () => {\r\n    const { dailyPhrases, currentPhrase, currentPhraseIndex, isCurrentPhraseFlipped, actions } = useDailyPhrases();\r\n\r\n    return (\r\n        <StyledFlashcardsPage>\r\n            <TopBar title={`Progress: ${currentPhraseIndex + 1}/${dailyPhrases.length}`} />\r\n            {!!dailyPhrases.length && (\r\n                <SwitchTransition>\r\n                    <CSSTransition timeout={300} classNames={transitionName} unmountOnExit key={currentPhrase.id}>\r\n                        <Container>\r\n                            <Phrase phrase={currentPhrase} onShow={actions.enableMarking} isFlipped={isCurrentPhraseFlipped} />\r\n                        </Container>\r\n                    </CSSTransition>\r\n                </SwitchTransition>\r\n            )}\r\n            <BottomMenu\r\n                markAsKnown={actions.markAsKnown}\r\n                markAsNotKnown={actions.markAsNotKnown}\r\n                rollbackState={actions.undo}\r\n                isRollbackDisabled={!actions.canUndo}\r\n                areButtonsDisabled={actions.canMark}\r\n                enableButtons={actions.enableMarking}\r\n            />\r\n        </StyledFlashcardsPage>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport usePhrases from '../../hooks/usePhrases';\r\nimport { TopBar } from '../../components';\r\nimport { Phrase } from '../../components';\r\n\r\nexport enum FREE_LEARNING_PAGE_TEST_IDS {\r\n    phrasesContainer = 'phrases-container'\r\n}\r\n\r\nconst StyledFreeLearningPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\ndisplay: grid;\r\ngrid-template-rows: 240px;\r\ngrid-template-columns: 552px 552px;\r\ngrid-gap: 16px;\r\n\r\n@media screen and (max-width: 1200px) {\r\n  grid-template-columns: 552px;\r\n}\r\n@media screen and (max-width: 600px) {\r\n  grid-template-columns: calc(100vw - 48px);\r\n}\r\n`;\r\n\r\nexport const FreeLearningPage: React.FC = () => {\r\n  const { phrases } = usePhrases();\r\n  return (\r\n    <StyledFreeLearningPage>\r\n      <TopBar title=\"Free Learning\" />\r\n      <StyledContainer data-testid={FREE_LEARNING_PAGE_TEST_IDS.phrasesContainer}>\r\n        {phrases.map((phrase) => (\r\n          <Phrase key={phrase.id} phrase={phrase} />\r\n        ))}\r\n      </StyledContainer>\r\n    </StyledFreeLearningPage>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport baseStyled, { createGlobalStyle, ThemedStyledInterface, ThemeProvider } from 'styled-components';\r\nimport { render } from '@testing-library/react';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=Montserrat:400,900|Roboto');\r\n\r\n    * {\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        \r\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n        -webkit-touch-callout: none; /* disable callout, image save panel (popup) */\r\n    }\r\n    \r\n    html {\r\n        box-sizing: border-box;\r\n        font-size: 10px;\r\n    }\r\n    \r\n    *,\r\n    *::before,\r\n    *::after {\r\n        //box-sizing: inherit;\r\n        box-sizing: border-box;\r\n    }\r\n    \r\n    ul[class],\r\n    ol[class] {\r\n      padding: 0;\r\n    }\r\n    \r\n    body,\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    p,\r\n    ul[class],\r\n    ol[class],\r\n    li,\r\n    figure,\r\n    figcaption,\r\n    blockquote,\r\n    dl,\r\n    dd {\r\n      margin: 0;\r\n    }\r\n\r\n    body {\r\n        padding: 0;\r\n        margin: 0;\r\n        color: #222;\r\n        font-family: Roboto, sans-serif;\r\n        font-size: 1.4rem;\r\n        font-weight: normal;\r\n        font-style: normal;\r\n        font-stretch: normal;\r\n        //line-height: normal;\r\n        letter-spacing: normal;\r\n        min-height: 100vh;\r\n        scroll-behavior: smooth;\r\n        text-rendering: optimizeSpeed;\r\n        line-height: 1.5;\r\n    }\r\n    \r\n    ul[class],\r\n    ol[class] {\r\n        list-style: none;\r\n    }\r\n\r\n    a:not([class]) {\r\n        text-decoration-skip-ink: auto;\r\n    }\r\n\r\n    img {\r\n        max-width: 100%;\r\n        display: block;\r\n    }\r\n\r\n    article > * + * {\r\n        margin-top: 1em;\r\n    }\r\n\r\n    input,\r\n    button,\r\n    textarea,\r\n    select {\r\n        font: inherit;\r\n    }\r\n\r\n    @media (prefers-reduced-motion: reduce) {\r\n        * {\r\n            animation-duration: 0.01ms !important;\r\n            animation-iteration-count: 1 !important;\r\n            transition-duration: 0.01ms !important;\r\n            scroll-behavior: auto !important;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type Theme = {\r\n    name: string;\r\n    backgroundColorStart: string;\r\n    backgroundColorStop: string;\r\n    cardBackground: string;\r\n    primary: string;\r\n    secondary: string;\r\n    fontColorLight: string;\r\n    fontColorDark: string;\r\n    shadow: string;\r\n}\r\n\r\nexport const lightTheme: Theme = {\r\n    name: 'lightTheme',\r\n    backgroundColorStart: '#9618F7',\r\n    backgroundColorStop: '#52A1D5',\r\n    cardBackground: '#fff',\r\n    primary: '#8919e0',\r\n    secondary: '#66acdb',\r\n    fontColorLight: '#fff',\r\n    fontColorDark: '#707070',\r\n    shadow: '1px 2px 4px 0 rgba(0, 0, 0, 0.16)'\r\n};\r\n\r\nexport const darkTheme: Theme = {\r\n    name: 'darkTheme',\r\n    backgroundColorStart: '#9618F7',\r\n    backgroundColorStop: '#52A1D5',\r\n    cardBackground: '#fff',\r\n    primary: '#fff',\r\n    secondary: '#01c1d6',\r\n    fontColorLight: '#222',\r\n    fontColorDark: '#707070',\r\n    shadow: '1px 2px 4px 0 rgba(0, 0, 0, 0.16)'\r\n};\r\n\r\nexport const styled = baseStyled as ThemedStyledInterface<Theme>;\r\n\r\nexport const renderTheme = (component: React.ReactElement, theme = lightTheme) => render(<ThemeProvider theme={theme}>{component}</ThemeProvider>);\r\n","import React, { useState } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { FlashcardsPage, FreeLearningPage } from './pages';\r\nimport { lightTheme, GlobalStyle } from './styledComponents';\r\nimport { PhrasesContext } from './contexts';\r\nimport { IPhrase } from './models';\r\n\r\nconst StyledApp = styled.div`\r\n  background-image: linear-gradient(${props => props.theme.backgroundColorStart}, ${props => props.theme.backgroundColorStop});\r\n  display: flex;\r\n  color: ${props => props.theme.fontColorLight}\r\n  transition: background-color ease 0.3s;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n    const [phrases, setPhrases] = useState<IPhrase[]>([]);\r\n    return (\r\n        <ThemeProvider theme={lightTheme}>\r\n            <PhrasesContext.Provider value={{ phrases, setPhrases: setPhrases }}>\r\n                <StyledApp>\r\n                    <GlobalStyle />\r\n                    <HashRouter>\r\n                        <div style={{ display: 'flex', width: '100%' }}>\r\n                            <Switch>\r\n                                <Route exact path='/' component={FlashcardsPage} />\r\n                                <Route exact path='/free-learning' component={FreeLearningPage} />\r\n                            </Switch>\r\n                        </div>\r\n                    </HashRouter>\r\n                </StyledApp>\r\n            </PhrasesContext.Provider>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\nconsole.log('public url', process.env.PUBLIC_URL);\r\n    window.addEventListener('load', () => {\r\n      // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      // Add a custom service worker until CRA team provides a way to inject config into workbox.\r\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  console.log('swUrl', swUrl);\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/left-arrow.c637926a.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.a6f6f4eb.svg\";"],"sourceRoot":""}